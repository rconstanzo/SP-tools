[object]
name = "sp.filter"
module = "SP-Tools"
category = ""
digest = "Apply filtering/routing to incoming descriptor messages"
seealso =  ['sp.descriptors~', 'sp.descriptorframe', 'sp.mfccframe', 'sp.melbandframe', 'sp.onsetframe~', 'sp.corpusmatch', 'sp.classmatch', 'sp.concatanalysis~']
description = "Apply filtering/routing to incoming descriptor messages."
discussion = """
    <h4><openfilelink filename="SP-Tools Overview.maxpat">Open the Overview Patch</openfilelink></h4>
    <p>The <o>sp.filter</o> object allows you to selectively send incoming descriptor messages to one of two outlets depending on whether the filtering criteria is met. This allows you to fork processing based on audio characteristics.</p>
"""

[metadata]
author = "Rodrigo Constanzo, Flucoma Project"
tags = ['Machine Learning', 'Drums']

[inlets]
[inlets.0]
type="list"
digest="Descriptor in"
description="Descriptor input as list or <o>buffer~</o>."

[inlets.1]
type="list"
digest="Descriptor in to be filtered"
description="Descriptor input as list or <o>buffer~</o> that will be filtered by the input of the left-most inlet."

[outlets]
[outlets.0]
type="list"
digest="Descriptor output if conditions are met"
description="Descriptor output if conditions are met. Output will be list or <o>buffer~</o> based on what the input was."

[outlets.1]
type="list"
digest="Descriptor output if conditions are not met"
description="Descriptor output if conditions are not met. Output will be list or <o>buffer~</o> based on what the input was."

[messages.filter]
digest = "Messages related to corpus filtering"
description = """
Messages related to corpus filtering.<br/>
After sending the <m>filter</m> message you send a series of additional arguments that determine what descriptor is being filtered, how it is being filtered, as well as further filtering strangs combined with conditionals.<br/>
The available descriptors that can be used for filtering are:<br/>
<b>loudness</b> = loudness in <b>dB<b/><br/>
<b>loudness_derivative</b> = derivative of loudness in <b>dB<b/><br/>
<b>centroid</b> = centroid in <b>MIDI pitch<b/><br/>
<b>centroid_derivative</b> = derivative of centroid in <b>MIDI pitch<b/><br/>
<b>flatness</b> = spectral flatness in <b>dB<b/><br/>
<b>flatness_derivative</b> = derivative of spectral flatness in <b>dB<b/><br/>
<b>pitch</b> = pitch in <b>MIDI pitch<b/><br/>
<b>pitch_confidence</b> = pitch confidence in <b>0 to 1<b/><br/>
You can filter by the following operators:<br/>
<b>==</b> = equals<br/>
<b>!=</b> = does not equal<br/>
<b><</b> = less than<br/>
<b><=</b> = less than or equal<br/>
<b>></b> = greater than<br/>
<b>>=</b> = greater than or equal<br/>
You can join multiple queries using:<br/>
<b>and</b>
<b>or</b><br/><br/>
Therefore a complete message would look as follows:<br/>
'filter loudness < -45' or 'filter duration > 2500' or 'filter centroid > 60 and time_centroid < 80'<br/><br/>
"""

[attributes.filter]
digest = "Messages related to corpus filtering"
description = """
Messages related to corpus filtering.<br/>
After sending the <m>filter</m> message you send a series of additional arguments that determine what descriptor is being filtered, how it is being filtered, as well as further filtering strangs combined with conditionals.<br/>
The available descriptors that can be used for filtering are:<br/>
<b>loudness</b> = loudness in <b>dB<b/><br/>
<b>loudness_derivative</b> = derivative of loudness in <b>dB<b/><br/>
<b>centroid</b> = centroid in <b>MIDI pitch<b/><br/>
<b>centroid_derivative</b> = derivative of centroid in <b>MIDI pitch<b/><br/>
<b>flatness</b> = spectral flatness in <b>dB<b/><br/>
<b>flatness_derivative</b> = derivative of spectral flatness in <b>dB<b/><br/>
<b>pitch</b> = pitch in <b>MIDI pitch<b/><br/>
<b>pitch_confidence</b> = pitch confidence in <b>0 to 1<b/><br/>
You can filter by the following operators:<br/>
<b>==</b> = equals<br/>
<b>!=</b> = does not equal<br/>
<b><</b> = less than<br/>
<b><=</b> = less than or equal<br/>
<b>></b> = greater than<br/>
<b>>=</b> = greater than or equal<br/>
You can join multiple queries using:<br/>
<b>and</b>
<b>or</b><br/><br/>
Therefore a complete message would look as follows:<br/>
'filter loudness < -45' or 'filter duration > 2500' or 'filter centroid > 60 and time_centroid < 80'<br/><br/>
"""
default = { value="", type="list", size=1 }