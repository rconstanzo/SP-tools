<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name='sp.gridmatch' category='' module='SP-Tools'>
    <digest>Find the nearest match in a pre-analyzed corpus</digest>
    <description>Find the nearest match in a pre-analyzed corpus.</description>
    <discussion>    <h4><openfilelink filename="SP-Tools Overview.maxpat">Open the Overview Patch</openfilelink></h4>
    <p>The <o>sp.gridmatch</o> object finds the nearest match in a corpus based on a grid-ified XY space. You can load/use the same corpora as you would with <o>sp.corpusmatch</o> but instead of matching based on incoming audio descriptors you can match using XY coordinates from a controller or UI object.</p>
</discussion>

	<metadatalist>
		<metadata name='author'>Rodrigo Constanzo, Flucoma Project</metadata>
		<metadata name='tag'>Machine Learning</metadata>
		<metadata name='tag'>Drums</metadata>
	</metadatalist>

    <!-- INLETS -->
    <inletlist>
        <inlet id='0' type='list'>
            <digest><o>buffer~</o> and control in</digest>
            <description><o>buffer~</o> and control input.</description>
        </inlet>
    </inletlist>
    <!-- INLETS -->

    <!-- OUTLETS -->
    <outletlist>
        <outlet id='0' type='list'>
            <digest>Matched entry</digest>
            <description>Matched entry.</description>
        </outlet>
        <outlet id='1' type='list'>
            <digest><o>dict</o> output for <o>sp.plotter</o> or <o>sp.eraetouch</o></digest>
            <description><o>dict</o> output for <o>sp.plotter</o> or <o>sp.eraetouch</o>.</description>
        </outlet>
    </outletlist>
    <!-- OUTLETS -->

    <!-- ARGUMENTS -->
    <objarglist>
    </objarglist>
    <!-- ARGUMENTS -->

    <!--MESSAGES-->
    <methodlist>
    <method name='corpus'>
        <arglist>
        </arglist>
        <digest>Messages related to corpus matching</digest>
        <description>Messages related to corpus matching.<br/>
After sending the <m>corpus</m> message you send an argument of 'match' followed by a time-scale you wish to match against.<br/>
The available options are:<br/>
<b>short</b> = the first 256 samples (at 44.1k sample rate)<br/>
<b>medium</b> = the first 4410 samples (at 44.1k sample rate)<br/>
<b>all</b> = the entire file<br/><br/>
Therefore a complete message would look as follows:<br/>
'corpus match all' or 'corpus match small'
</description>
    </method>
    <method name='info'>
        <arglist>
        </arglist>
        <digest>Print corpus metatdata/info to Max console</digest>
        <description>Prints a summary of the corpus metatdata/info to the Max console.</description>
    </method>
    <method name='load'>
        <arglist>
        </arglist>
        <digest>Load a pre-trained concat <b>.json</b> file</digest>
        <description>Opens file dialog to select pre-trained concat <b>.json</b> file.</description>
    </method>
    <method name='read'>
        <arglist>
        </arglist>
        <digest>Read a pre-trained concat <b>.json</b> file</digest>
        <description>Reads a pre-trained concat <b>.json</b> file directly from a relative or absolute path.</description>
    </method>
    <method name='print'>
        <arglist>
        </arglist>
        <digest>Print dataset contents to Max console</digest>
        <description>Prints a summary of the descriptors in the dataset to the Max console.</description>
    </method>
	</methodlist>
	<!--MESSAGES-->

	<!--ATTRIBUTES-->
	<attributelist>
        <attribute 
        name='roundrobin' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Enable roundrobin sample matching</digest>
        <description>Enables round robin sample matching so when a match is found twice in a row, a randomized selection is made within a window of options. <br/>
The available options are:<br/>
<b>0</b> = round robin selection is off <br/>
<b>1</b> = round robin selection is on (default 5 nearest neighbors) <br/>
<b>2+</b> = sets the amount of nearest neighbors <br/>
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
	</attributelist>
	<!--ATTRIBUTES-->

	<!-- SEEALSO -->
	<seealsolist>
        <seealso name='sp.corpusanalysis' />
        <seealso name='sp.corpuscreate' />
        <seealso name='sp.corpusmatch' />
        <seealso name='sp.corpusplayer~' />
        <seealso name='sp.corpuslist' />
        <seealso name='sp.folderloop' />
        <seealso name='sp.descriptors~' />
        <seealso name='sp.descriptorframe' />
	</seealsolist>
	<!-- SEEALSO -->

    <!-- INLETS -->
    <misc name="Input">
        <entry name='list'>
            <description><o>buffer~</o> and control input.</description>
        </entry>
    </misc> 
    <!-- INLETS -->

    <!-- OUTLETS -->
    <misc name="Output">
        <entry name='list'>
            <description>Matched entry.</description>
        </entry>
        <entry name='list'>
            <description><o>dict</o> output for <o>sp.plotter</o> or <o>sp.eraetouch</o>.</description>
        </entry>
    </misc>
    <!-- OUTLETS -->
</c74object>
