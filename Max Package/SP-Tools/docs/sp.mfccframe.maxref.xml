<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name='sp.mfccframe' category='' module='SP-Tools'>
    <digest>Analyzes audio for MFCCs based on frame input
</digest>
    <description>Analyzes audio for MFCCs based on frame input.
</description>
    <discussion><h4><openfilelink filename="SP-Tools Overview.maxpat">Open the Overview Patch</openfilelink></h4>
The <o>sp.mfccframe</o> object outputs 13 MFCC coefficients (skipping the 0th coefficient) which can be used for classification and clustering. Although abstract they can also be used to control parameters.
</discussion>

	<metadatalist>
		<metadata name='author'>Rodrigo Constanzo, Flucoma Project</metadata>
		<metadata name='tag'>Machine Learning</metadata>
		<metadata name='tag'>Audio Analysis</metadata>
		<metadata name='tag'>Onset Detection</metadata>
		<metadata name='tag'>Corpus Playback</metadata>
	</metadatalist>

    <!-- INLETS -->
    <inletlist>
        <inlet id='0' type='list'>
            <digest>Frame to analyze
</digest>
            <description>Frame to analyze from <o>sp.onsetframe</o><del>, <o>sp.realtimeframe</o></del>, or <o>sp.triggerframe~</o>
</description>
        </inlet>
    </inletlist>
    <!-- INLETS -->

    <!-- OUTLETS -->
    <outletlist>
        <outlet id='0' type='list'>
            <digest>MFCCs as list
</digest>
            <description>Analyzed MFCCs in list form.
</description>
        </outlet>
        <outlet id='1' type='list'>
            <digest>MFCCs as <o>buffer~</o>
</digest>
            <description>Analyzed MFCCs in <o>buffer~</o> form.
</description>
        </outlet>
    </outletlist>
    <!-- OUTLETS -->

    <!-- ARGUMENTS -->
    <objarglist>
    </objarglist>
    <!-- ARGUMENTS -->

    <!--MESSAGES-->
    <methodlist>
	</methodlist>
	<!--MESSAGES-->

	<!--ATTRIBUTES-->
	<attributelist>
        <attribute 
        name='blocking' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Choose which thread to use for processing
</digest>
        <description>By default non-realtime objects use the Max main thread.
The available options are:
<strong>0: Non-blocking</strong> = Use a dedicated worker thread (for longer jobs)
<strong>1: Blocking (Low Priority)</strong> = Use Max main thread (for small jobs)
<strong>2: Blocking (High Priority)</strong> = Use calling thread (for very small jobs)
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='1'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='fftsettings' 
        type='list' 
        size='3'
        get='1' set='1' 
        >
        <digest>FFT settings for analysis
</digest>
        <description>FFT settings consist of three numbers representing the window size, hop size and FFT size in samples:
The hop size and fft size can both be set to -1 (and are by default), with slightly different meanings:
For the hop size, -1 = windowsize/2
For the FFT size, -1 = windowsize snapped to the nearest equal / greater power of 2 (e.g. windowsize 1024 =&gt; fftsize 1024, but windowssize 1000 also =&gt; fftsize 1024)
Constraints
FFTSize, if != -1, will snap to the next greatest power of two
if FFT size != -1, then window size is clipped at FFT size
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='list' 
            size='3' 
            value='256 64 512'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='numframes' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>How many samples to analyze
</digest>
        <description>How many samples to analyse. The default of -1 indicates to analyse through to the end of the <o>buffer~</o>.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='256'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='realtime' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Runs in high-priority thread for realtime performance
</digest>
        <description>Runs in high-priority thread when fast realtime performance is required.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='1'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='source' 
        type='symbol' 
        size='1'
        get='1' set='1' 
        >
        <digest>The buffer to use as source material
</digest>
        <description>The <o>buffer~</o> to use as the source material to be pitch-tracked. The different channels of multichannel buffers will be processed sequentially.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='symbol' 
            size='1' 
            value=''
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='startframe' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>WHere in the <m>source</m> to start analysis.
</digest>
        <description>Where in <m>source</m> to start the analysis, in samples. The default is 0.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
	</attributelist>
	<!--ATTRIBUTES-->

	<!-- SEEALSO -->
	<seealsolist>
        <seealso name='sp.descriptorframe' />
        <seealso name='sp.melbandframe' />
        <seealso name='sp.mfcc~' />
        <seealso name='sp.onsetframe~' />
        <seealso name='sp.sineframe' />
        <seealso name='sp.triggerframe~' />
	</seealsolist>
	<!-- SEEALSO -->
</c74object>