<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name='sp.corpussampler~' category='' module='SP-Tools'>
    <digest>Find the nearest match in a pre-analyzed corpus
</digest>
    <description>Find the nearest match in a pre-analyzed corpus.
</description>
    <discussion><h4><openfilelink filename="SP-Tools Overview.maxpat">Open the Overview Patch</openfilelink></h4>
The <o>sp.corpussampler~</o> object is an all-in-one corpus descriptor analysis and corpus playback object that combines the functionality of <o>sp.descriptors</o><del>, <o>sp.corpusmatch</o>, and <o>sp.corpusplayer</o></del>.
</discussion>

	<metadatalist>
		<metadata name='author'>Rodrigo Constanzo, Flucoma Project</metadata>
		<metadata name='tag'>Machine Learning</metadata>
		<metadata name='tag'>Audio Analysis</metadata>
		<metadata name='tag'>Onset Detection</metadata>
		<metadata name='tag'>Corpus Playback</metadata>
	</metadatalist>

    <!-- INLETS -->
    <inletlist>
        <inlet id='0' type='signal'>
            <digest>Primary audio input
</digest>
            <description>Primary input for onset detection and recording. Different <at>input</at> modes can apply filtering based on the type of input being used.
</description>
        </inlet>
        <inlet id='1' type='signal'>
            <digest>Secondary audio input
</digest>
            <description>Audio input for recording independently of onset detection when being used in different <at>input</at> modes.
</description>
        </inlet>
    </inletlist>
    <!-- INLETS -->

    <!-- OUTLETS -->
    <outletlist>
        <outlet id='0' type='signal'>
            <digest>Audio output (left)
</digest>
            <description>Audio output (left).
</description>
        </outlet>
        <outlet id='1' type='signal'>
            <digest>Audio output (right)
</digest>
            <description>Audio output (right). The right outlet will be the same as the left outlet if the entry in the corpus is mono. It will only play back in true stereo when the source file is in stereo.
</description>
        </outlet>
        <outlet id='2' type='list'>
            <digest>Dict output for <o>sp.plotter</o>
</digest>
            <description>Dict output for <o>sp.plotter</o>.
</description>
        </outlet>
        <outlet id='3' type='signal'>
            <digest>Trigger output
</digest>
            <description>Analyzed onset as a trigger, time-aligned with descriptor analysis.
</description>
        </outlet>
        <outlet id='4' type='signal'>
            <digest>Gate output
</digest>
            <description>Analyzed onset as a gate, time-aligned with descriptor analysis.
</description>
        </outlet>
    </outletlist>
    <!-- OUTLETS -->

    <!-- ARGUMENTS -->
    <objarglist>
        <objarg name='default' optional='1' type='symbol'>
            <digest>JSON file to load by default
</digest>
            <description>JSON file to load by default.
</description>
        </objarg>
        <objarg name='setup' optional='1' type='symbol'>
            <digest>Setup JSON file to load by default
</digest>
            <description>Setup JSON file to load by default.
</description>
        </objarg>
    </objarglist>
    <!-- ARGUMENTS -->

    <!--MESSAGES-->
    <methodlist>
    <method name='corpus'>
        <arglist>
        </arglist>
        <digest>Messages related to corpus matching
</digest>
        <description>Messages related to corpus matching.
After sending the <m>corpus</m> message you send an argument of &#39;match&#39; followed by a time-scale you wish to match against.
The available options are:
<strong>short</strong> = the first 256 samples (at 44.1k sample rate)
<strong>medium</strong> = the first 4410 samples (at 44.1k sample rate)
<strong>all</strong> = the entire file
Therefore a complete message would look as follows:
&#39;corpus match all&#39; or &#39;corpus match small&#39;
</description>
    </method>
    <method name='filter'>
        <arglist>
        </arglist>
        <digest>Messages related to corpus filtering
</digest>
        <description>Messages related to corpus filtering.
After sending the <m>filter</m> message you send a series of additional arguments that determine what descriptor is being filtered, how it is being filtered, as well as further filtering strands combined with conditionals.
The available descriptors that can be used for filtering are:
<strong>duration</strong> =  overall sample duration in <strong>ms</strong>
<strong>time_centroid</strong> = how long a sample &#39;sounds&#39; in <strong>ms</strong>
<strong>loudness</strong> = loudness in <strong>dB</strong>
<strong>centroid</strong> = centroid in <strong>MIDI pitch</strong>
<strong>flatness</strong> = spectral flatness in <strong>dB</strong>
<strong>pitch</strong> = pitch in <strong>MIDI pitch</strong>
<strong>pitch_confidence</strong> = pitch confidence in <strong>0 to 1</strong>
<strong>loudness_medium</strong> = same for medium time frame
<strong>centroid_medium</strong> = same for medium time frame
<strong>flatness_medium</strong> = same for medium time frame
<strong>pitch_medium</strong> = same for medium time frame
<strong>pitch_confidence_medium</strong> = same for medium time frame
<strong>loudness_all</strong> = same for entire sample
<strong>centroid_all</strong> = same for entire sample
<strong>flatness_all</strong> = same for entire sample
<strong>pitch_all</strong> = same for entire sample
<strong>pitch_confidence_all</strong> = same for entire sample
<strong>index</strong> = the sample index in the corpus
You can filter by the following operators:
<strong>==</strong> = equals
<strong>!=</strong> = does not equal
<strong>&lt;</strong> = less than
<strong>&lt;=</strong> = less than or equal
<strong>&gt;</strong> = greater than
<strong>&gt;=</strong> = greater than or equal
You can join multiple queries using:
<strong>and</strong>
<strong>or</strong>
Therefore a complete message would look as follows:
&#39;filter loudness &lt; -45&#39; or &#39;filter duration &gt; 2500&#39; or &#39;filter centroid &gt; 60 and time_centroid &lt; 80&#39;
To reset the filtering you can send the following message:
&#39;filter reset&#39;
</description>
    </method>
    <method name='info'>
        <arglist>
        </arglist>
        <digest>Print corpus metatdata/info to Max console
</digest>
        <description>Prints a summary of the corpus metatdata/info to the Max console.
</description>
    </method>
    <method name='jump'>
        <arglist>
        </arglist>
        <digest>Jump to that position in the last played sample
</digest>
        <description>Jump to that position in the last played sample (0.0 to 1.0).
</description>
    </method>
    <method name='load'>
        <arglist>
        </arglist>
        <digest>Load a pre-trained corpus <strong>.json</strong> file
</digest>
        <description>Opens file dialog to select pre-trained corpus <strong>.json</strong> file.
</description>
    </method>
    <method name='print'>
        <arglist>
        </arglist>
        <digest>Print dataset contents to Max console
</digest>
        <description>Prints a summary of the descriptors in the dataset to the Max console.
</description>
    </method>
    <method name='read'>
        <arglist>
        </arglist>
        <digest>Read a pre-trained corpus <strong>.json</strong> file
</digest>
        <description>Reads a pre-trained corpus <strong>.json</strong> file directly from a relative or absolute path.
</description>
    </method>
    <method name='setup'>
        <arglist>
        </arglist>
        <digest>Messages related to setups
</digest>
        <description>Messages related to setups.
After sending the <m>setup</m> message you can send send several additional arguments. These are:
<strong>load</strong> = opens file dialog to select pre-analyzed setup <strong>.json</strong> file.
<strong>read</strong> = reads a pre-analyzed setup <strong>.json</strong> file from a relative or absolute path
<strong>match</strong> = enables or disables the setup matching by sending a <strong>0</strong> or <strong>1</strong>
<strong>range</strong> = sets the median and range for the internal standardization. this consists of two values between <strong>0-100</strong> with the default being <strong>25 75</strong>
Therefore a complete message would look as follows:
&#39;setup range 10 90&#39; or &#39;setup match 1&#39; or &#39;setup read setup_snare.json&#39;
</description>
    </method>
	</methodlist>
	<!--MESSAGES-->

	<!--ATTRIBUTES-->
	<attributelist>
        <attribute 
        name='buffer' 
        type='symbol' 
        size='1'
        get='1' set='1' 
        >
        <digest>Polybuffer name to use
</digest>
        <description>Polybuffer name to take when being used for non-corpus playback.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='symbol' 
            size='1' 
            value=''
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='fastrampdown' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>The number of samples the relative envelope follower will take to reach the next value when falling
</digest>
        <description>The number of samples the relative envelope follower will take to reach the next value when falling. Typically, this will be faster than slowrampdown.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='383'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='fastrampup' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>The number of samples the relative envelope follower will take to reach the next value when raising
</digest>
        <description>The number of samples the relative envelope follower will take to reach the next value when raising. Typically, this will be faster than slowrampup.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='3'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='fftsettings' 
        type='list' 
        size='3'
        get='1' set='1' 
        >
        <digest>FFT settings for analysis
</digest>
        <description>FFT settings consist of three numbers representing the window size, hop size and FFT size in samples:
The hop size and fft size can both be set to -1 (and are by default), with slightly different meanings:
For the hop size, -1 = windowsize/2
For the FFT size, -1 = windowsize snapped to the nearest equal / greater power of 2 (e.g. windowsize 1024 =&gt; fftsize 1024, but windowssize 1000 also =&gt; fftsize 1024)
Constraints
FFTSize, if != -1, will snap to the next greatest power of two
if FFT size != -1, then window size is clipped at FFT size
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='list' 
            size='3' 
            value='256 64 512'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='floor' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>The level in dB the slow ramp needs to be above to consider a detected difference valid, allowing to ignore the onsets in the noise floor
</digest>
        <description>The level in dB the slow ramp needs to be above to consider a detected difference valid, allowing to ignore the onsets in the noise floor.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='' 
            value='-70'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='highpassfreq' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>The frequency of the fourth-order high-pass filter. This is done first on the signal to minimise low frequency intermodulation with very fast ramp lengths.
</digest>
        <description>The frequency of the fourth-order Linkwitz–Riley high-pass filter (<a href="https://en.wikipedia.org/wiki/Linkwitz%E2%80%93Riley_filter">https://en.wikipedia.org/wiki/Linkwitz%E2%80%93Riley_filter</a>). This is done first on the signal to minimise low frequency intermodulation with very fast ramp lengths. A frequency of 0 bypasses the filter.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='2000'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='in' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Fade in amount
</digest>
        <description>Fade in amount (0-100%).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='incurve' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Curve for attack fade in
</digest>
        <description>Curve for attack fade in (0% = linear, -100% = exponential, 100% = logarithmic).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='input' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Sets the input mode (air microphone, SP Sensor, contact/trigger)
</digest>
        <description>Sets the input mode allowing you to use an air microphone, a Sensory Percussion sensor, or a normal drum trigger/contact mic. When using input modes 3/4, the SP sensor and contact mic are only used for onset detection, and the air microphone will be recorded into the <o>buffer~</o> for audio analysis.
The available options are:
<strong>0</strong> = primary input (onset and recording)
<strong>1</strong> = SP sensor in primary input (onset and recording)
<strong>2</strong> = contact mic in primary input (onset and recording)
<strong>3</strong> = SP sensor + air microphone (secondary input)
<strong>4</strong> = contact mic + air microphone (secondary input)
<strong>5</strong> = SP sensor with mic correction
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='length' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Sample length to play
</digest>
        <description>Sample length to play (0-100%).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='100'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='lengthabsolute' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Sample length to play (in ms)
</digest>
        <description>Sample length to play (in ms). This will be compared to the relative length and the lesser of the two will be taken as the actual length.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value=''
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='lockout' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Amount of time (in <strong>ms</strong>) before it can get triggered again
</digest>
        <description>Amount of time (in <strong>ms</strong>) before an onset can get triggered again.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='30'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='loop' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Enables looping of playback
</digest>
        <description>Enables looping of playback. The loop parameter applies globally so if you have sp.corpusplayer~ set to 16 voices (the default) you can quickly end up with a chaotic and polymetric loop.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='loudness' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Amount of loudness compensation to apply
</digest>
        <description>Amount of loudness compensation to apply (bewteen -100 and 100%).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='50'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='metric' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>The metric on which spectral difference is computed
</digest>
        <description>The metric used to derive a difference curve between spectral frames. It can be any of the following: 0 = &#39;0&#39; Energy thresholds on (sum of squares of magnitudes / nBins) (like Onsets power)
1 = &#39;1&#39; HFC thresholds on (sum of (squared magnitudes * binNum) / nBins)
2 = &#39;2&#39; SpectralFlux thresholds on (difference in magnitude between consecutive frames, half rectified)
3 = &#39;3&#39; MKL thresholds on (sum of log of magnitude ratio per bin) (or equivalently, sum of difference of the log magnitude per bin) (like Onsets mkl)
4 = &#39;4&#39; IS (WILL PROBABLY BE REMOVED) Itakura - Saito divergence (see literature)
5 = &#39;5&#39; Cosine thresholds on (cosine distance between comparison frames)
6 = &#39;6&#39; PhaseDev takes the past 2 frames, projects to the current, as anticipated if it was a steady state, then compute the sum of the differences, on which it thresholds (like Onsets phase)
7 = &#39;7&#39; WPhaseDev same as PhaseDev, but weighted by the magnitude in order to remove chaos noise floor (like Onsets wphase)
8 = &#39;8&#39; ComplexDev same as PhaseDev, but in the complex domain - the anticipated amp is considered steady, and the phase is projected, then a complex subtraction is done with the actual present frame. The sum of magnitudes is used to threshold (like Onsets complex)
9 = &#39;9&#39; RComplexDev same as above, but rectified (like Onsets rcomplex)
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='9'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='minslicelength' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>The length in samples that the slice will stay ON
</digest>
        <description>The length in samples that the Slice will stay ON. Changes of states during that period will be ignored. This is the equivalent of <a>lockout</a> but set in samples.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='1323'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='mode' 
        type='symbol' 
        size='1'
        get='1' set='1' 
        >
        <digest>Select between amplitude or spectral onset detection algorithms
</digest>
        <description>Select between amplitude or spectral onset detection algorithms.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='symbol' 
            size='1' 
            value='amplitude'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='offthreshold' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>The threshold in dB of the relative envelope follower to reset, aka to allow the differential envelope to trigger again.
</digest>
        <description>The threshold in dB of the relative envelope follower to reset, aka to allow the differential envelope to trigger again.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='8'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='onthreshold' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>The threshold in dB of the relative envelope follower to trigger an onset, aka to go ON when in OFF state
</digest>
        <description>The threshold in dB of the relative envelope follower to trigger an onset, aka to go ON when in OFF state. It is computed on the difference between the two envelope followers.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='19'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='out' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Fade out amount
</digest>
        <description>Fade out amount (0-100%).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='outcurve' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Curve for attack fade out
</digest>
        <description>Curve for fade out (0% = linear, -100% = logarithmic, 100% = exponential).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='pitch' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Amount of half steps to transpose up or down (when in timestretch mode)
</digest>
        <description>Amount of half steps to transpose up or down (when in timestretch mode) (-24-24).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value=''
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='sensitivity' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>The nervousness of the algorithm thresholds (from 0 to 100%)
</digest>
        <description>The nervousness of the algorithm thresholds (from 0 to 100%). This is essentially a &#39;macro&#39; parameter for the individual on/off thresholds.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='50'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='slowrampdown' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>The number of samples the absolute envelope follower will take to reach the next value when falling.
</digest>
        <description>The number of samples the absolute envelope follower will take to reach the next value when falling.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='2205'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='slowrampup' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>The number of samples the absolute envelope follower will take to reach the next value when raising.
</digest>
        <description>The number of samples the absolute envelope follower will take to reach the next value when raising.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='2205'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='smoothing' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>The size of the smoothing filter applied to the difference curve
</digest>
        <description>The size of the smoothing filter applied to the difference curve when in spectral <at>mode</at>.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='2.5' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='spectral' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Amount of spectral compensation to apply
</digest>
        <description>Amount of spectral compensation to apply (bewteen -100 and 100%).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value=''
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='speed' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Playback speed
</digest>
        <description>Playback speed (-1000 to 1000%).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='100'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='start' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Sample start offset
</digest>
        <description>Sample start offset (0-50%).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value=''
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='startabsolute' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Sample start offset (in ms)
</digest>
        <description>Sample start offset (in ms). This will be added to the relative offset to combine the two.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value=''
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='steal' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Whether poly voice stealing is enabled
</digest>
        <description>Sets whether voice stealing is enabled, which allows new samples to start when previous ones are still sounding.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='1'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='timestretch' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Enables timestretch mode
</digest>
        <description>Enables timestretch mode.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='0'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='timestretchmode' 
        type='symbol' 
        size='1'
        get='1' set='1' 
        >
        <digest>Timestretch algorithm to use
</digest>
        <description>Timestretch algorithm to use (basic, monophonic, rhythmic, general, extremestretch, efficient).
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='symbol' 
            size='1' 
            value='basic'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='voices' 
        type='int' 
        size='1'
        get='1' set='1' 
        >
        <digest>Amount of polyphony
</digest>
        <description>Sets the amount of polyphony available for sample playback.
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='int' 
            size='1' 
            value='16'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
        <attribute 
        name='window' 
        type='float' 
        size='1'
        get='1' set='1' 
        >
        <digest>Window of time to look for spectral difference in (for HFC, SpectralFlux, MKL, Cosine only)
</digest>
        <description>Window of time to look for spectral difference in when in spectral <at>mode</at> (for HFC, SpectralFlux, MKL, Cosine only). (in ms)
</description>

        <attributelist>
            <attribute 
            name='default' 
            type='float' 
            size='1' 
            value='2.5'
            get='1' set='1' 
            />
        </attributelist>
        </attribute>
	</attributelist>
	<!--ATTRIBUTES-->

	<!-- SEEALSO -->
	<seealsolist>
        <seealso name='sp.corpuscreate' />
        <seealso name='sp.corpuslist' />
        <seealso name='sp.corpusmatch' />
        <seealso name='sp.corpusplayer~' />
        <seealso name='sp.gridmatch' />
        <seealso name='sp.plotter' />
        <seealso name='sp.sampler~' />
        <seealso name='sp.setupcreate~' />
	</seealsolist>
	<!-- SEEALSO -->
</c74object>